{"version":3,"sources":["utils/firebase.js","components/Incomes.js","components/Stocks.js","components/Expenses.js","components/Accounts.js","components/MySettings.js","components/LoginForm.js","Header.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Incomes","React","useState","incomes","setIncomes","isModalOpen","setIsModalOpen","isLoading","setIsLoading","Date","toLocaleDateString","incomeDate","setIncomeDate","amt","setAmt","total","setTotal","note","setNote","docID","setDocID","useEffect","firestore","collection","orderBy","onSnapshot","snapshot","data","docs","map","doc","id","temp","forEach","income","Modal","open","closeIcon","onClose","Header","Content","image","Description","Form","Field","value","placeholder","onChange","e","target","type","Actions","Button","color","floated","loading","onClick","delete","then","console","log","catch","error","db","update","date","add","Container","Table","unstackable","Row","HeaderCell","Body","Cell","stocks","colName","stockName","setStockName","qty","setQty","price","setPrice","currPrices","setCurrPrices","toISOString","slice","currDate","setCurrDate","currPrice","setCurrPrice","totalCurr","setTotalCurr","sortArray","arr","sort","a","b","numFormat","Intl","NumberFormat","currency","format","Math","round","setDefalut","colRef","obj","FieldValue","arrayUnion","Input","label","List","Item","Icon","editedIndex","findIndex","fobj","splice","arrayRemove","updateCurrPrices","name","textAlign","Expenses","location","useLocation","currAcc","URLSearchParams","search","get","lastVisible","useRef","rows","setRows","where","limit","current","length","width","row","i","spend_date","expense","onEnter","startAfter","Accounts","setAccName","Grid","columns","divided","Column","selection","size","active","as","Link","to","Image","src","MySettings","user","auth","currentUser","displayName","setDisplayName","onSubmit","updateProfile","Group","content","LoginForm","history","useHistory","email","setEmail","password","setPassword","signInWithEmailAndPassword","push","setUser","onAuthStateChanged","currUser","activeItem","setActiveItem","Menu","position","Dropdown","item","text","signOut","path","Stocks","App","container","document","getElementById","ReactDom","render"],"mappings":"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","file":"static/js/main.b2c9d7d8.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyCxMvi4M0Xai8kuqn3r970KLassk-fTlGw\",\r\n//   authDomain: \"social-cool-16812.firebaseapp.com\",\r\n//   projectId: \"social-cool-16812\",\r\n//   storageBucket: \"social-cool-16812.appspot.com\",\r\n//   messagingSenderId: \"443839253633\",\r\n//   appId: \"1:443839253633:web:105b938de5b05af1f15180\"\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyClLeHQJMt3BzbrK_AHpWeq0nlqzY2r5ik\",\r\n  authDomain: \"money-39797.firebaseapp.com\",\r\n  projectId: \"money-39797\",\r\n  storageBucket: \"money-39797.appspot.com\",\r\n  messagingSenderId: \"142963352306\",\r\n  appId: \"1:142963352306:web:ac3c09e593009a5175666b\",\r\n  measurementId: \"G-012VKYDZ07\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase\r\n// Initialize Cloud Firestore and get a reference to the service\r\n// const db = firebase.firestore();","import React from 'react';\r\nimport { Container, Button, Header, Table, Form, Modal } from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\n// import 'firebase/firestore';\r\n\r\nfunction Incomes() { \r\n\r\n  const [incomes, setIncomes] = React.useState([]);\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const [incomeDate, setIncomeDate] = React.useState(\r\n    new Date().toLocaleDateString()\r\n  );\r\n  const [amt, setAmt] = React.useState('');\r\n  const [total, setTotal] = React.useState(0);\r\n  const [note, setNote] = React.useState('');\r\n  const [docID, setDocID] = React.useState('');\r\n\r\n  // onSnapshot 監聽資料有變動時執行,在新增後,資料即時更新\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection('incomes')\r\n      .orderBy(\"date\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          \r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        let temp = 0;\r\n        data.forEach((income)=>{\r\n          temp +=  income.amt*1\r\n        })\r\n        setTotal(temp)       \r\n        setIncomes(data);        \r\n      })     \r\n  \r\n  }, []);\r\n\r\n  \r\n\r\n  function deleteIncome() {\r\n    setIsLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection('incomes')\r\n      .doc(docID)\r\n      .delete()\r\n      .then(() => {\r\n        console.log('Document successfully deleted!');\r\n        setIsModalOpen(false);\r\n        setIsLoading(false);\r\n        setDocID('');\r\n        setAmt('');\r\n        setNote('');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error removing document: ', error);\r\n      });\r\n  }\r\n\r\n  function updateIncome() {\r\n    setIsLoading(true);\r\n    const db = firebase.firestore();\r\n\r\n    // 用 docID 判斷新增或更新\r\n    if (docID) {\r\n      var washingtonRef = db.collection('incomes').doc(docID);\r\n      washingtonRef\r\n        .update({ date: incomeDate, amt: amt, note: note })\r\n        .then(() => {\r\n          setIsModalOpen(false);\r\n          setIsLoading(false);\r\n          setDocID('');\r\n          setAmt('');\r\n          setNote('');\r\n          console.log('Document successfully updated!');\r\n        })\r\n        .catch((error) => {\r\n          // The document probably doesn't exist.\r\n          console.error('Error updating document: ', error);\r\n        });\r\n    } else {\r\n      // 新增\r\n      db.collection('incomes')\r\n        .add({\r\n          date: incomeDate,\r\n          amt: amt,\r\n          note: note,\r\n        })\r\n        .then(() => {\r\n          setIsModalOpen(false);\r\n          setIsLoading(false);\r\n          console.log('Document successfully created!');\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={isModalOpen} closeIcon onClose={() => setIsModalOpen(false)}>\r\n        <Modal.Header>Select a Photo</Modal.Header>\r\n        <Modal.Content image>\r\n          <Modal.Description>\r\n            <Header>編輯</Header>\r\n          </Modal.Description>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>日期</label>\r\n              <input\r\n                value={incomeDate}\r\n                placeholder=\"\"\r\n                onChange={(e) => setIncomeDate(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>金額</label>\r\n              <input type=\"number\"\r\n                value={amt}\r\n                placeholder=\"\"\r\n                onChange={(e) => setAmt(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>備註</label>\r\n              <input\r\n                value={note}\r\n                placeholder=\"\"\r\n                onChange={(e) => setNote(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          {docID ? (\r\n            <Button\r\n              color=\"red\"\r\n              floated=\"left\"\r\n              loading={isLoading}\r\n              onClick={deleteIncome}\r\n            >\r\n              刪除\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          <Button color=\"blue\" loading={isLoading} onClick={updateIncome}>\r\n            儲存\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      {/* 用 submit 送出造成用量超額 */}\r\n      {/* <Button type='submit' onClick={addIncome}>Submit</Button> */}\r\n  \r\n  \r\n      <Container>\r\n        \r\n       \r\n  \r\n      <Button\r\n        color=\"blue\"\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n          setDocID('');\r\n          setAmt('');\r\n          setNote('');\r\n          setIncomeDate(new Date().toLocaleDateString())\r\n        }}\r\n      >\r\n        新增\r\n      </Button>\r\n      <Header>{total}</Header>\r\n      \r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>日期</Table.HeaderCell>\r\n            <Table.HeaderCell>收入</Table.HeaderCell>\r\n            <Table.HeaderCell>備註</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {incomes.map((income) => {\r\n            return (\r\n              <Table.Row\r\n                onClick={() => {\r\n                  setIncomeDate(income.date);\r\n                  setNote(income.note);\r\n                  setAmt(income.amt);\r\n                  setDocID(income.id);\r\n\r\n                  setIsModalOpen(true);\r\n                }}\r\n                key={income.id}\r\n              >\r\n                <Table.Cell>{income.date}</Table.Cell>\r\n                <Table.Cell>{income.amt}</Table.Cell>\r\n                <Table.Cell>{income.note}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n         \r\n        </Table.Body>\r\n      </Table>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Incomes;\r\n","import React from 'react';\r\nimport firebase from '../utils/firebase';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Header,\r\n  Table,\r\n  Form,\r\n  Modal,\r\n  List,\r\n  Input,\r\n  Label,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\n// import {FieldValue} from 'firebase/firestore'\r\n\r\nfunction stocks() {\r\n  // 文件集合名稱\r\n  const colName = 'stocks';\r\n  // 文件集合陣列\r\n  const [incomes, setIncomes] = React.useState([]);\r\n  //\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  // 文件欄位\r\n  const [docID, setDocID] = React.useState('');\r\n  const [stockName, setStockName] = React.useState('');\r\n  const [qty, setQty] = React.useState('');\r\n  const [price, setPrice] = React.useState(0);\r\n  const [currPrices, setCurrPrices] = React.useState([]);\r\n\r\n  //\r\n  // 文件欄位現價明細\r\n  const [currDate, setCurrDate] = React.useState(\r\n    new Date().toISOString().slice(0, 10)\r\n  );\r\n  const [currPrice, setCurrPrice] = React.useState('');\r\n\r\n  // const [selectedItem, setSelectedItem]= React.useState({});\r\n\r\n  // 合計\r\n  const [total, setTotal] = React.useState(0);\r\n  const [totalCurr, setTotalCurr] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(colName)\r\n      // .orderBy('date', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {          \r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setIncomes(data);\r\n        // 計算合計                \r\n        let temp = 0;\r\n        data.forEach((income) => {\r\n          temp += income.qty * income.price;\r\n          // if(income.currPrices)\r\n          // console.log(sortArray(income.currPrices)[0]?.price)\r\n        });\r\n        setTotal(temp);\r\n        temp = 0;\r\n        data.forEach((income) => {\r\n          temp += income.qty * sortArray(income.currPrices)[0]?.price;          \r\n        });\r\n\r\n        setTotalCurr(temp);\r\n        // console.log(sortArray(data[0].currPrices)[0].price)\r\n        \r\n      });\r\n\r\n    // updateCurrPrices('89ru4gSP1QMShWfESBvP');\r\n  }, []);\r\n  // 排序\r\n  function sortArray(arr) {\r\n    const result = arr.sort((a, b) => {\r\n      return a.date < b.date ? 1 : -1;\r\n    });\r\n    return result;\r\n  }\r\n  // 更新現價\r\n  function updateCurrPrices(id, obj) {\r\n    const db = firebase.firestore();\r\n    var colRef = db.collection(colName).doc(id);\r\n    \r\n    const editedIndex = currPrices.findIndex(fobj=>{\r\n      return fobj.date === obj.date\r\n    })\r\n    currPrices.splice(editedIndex,1)\r\n    // console.log(editedIndex); // 👉️ 1\r\n    colRef.update({      \r\n      currPrices: firebase.firestore.FieldValue.arrayRemove(obj),\r\n    });\r\n   \r\n    // firebase.firestore.FieldValue.arrayUnion(\"greater_virginia\")\r\n    // firebase.firestore.FieldValue.arrayRemove(\"east_coast\")\r\n    // const obj = { date: '0719', price: '456' };\r\n    // const editedIndex = currPrices.indexOf(obj);\r\n    // console.log(editedIndex)\r\n    \r\n    // console.log(obj.date)\r\n    // console.log(currPrices)\r\n    // console.log(obj)\r\n\r\n    \r\n  }\r\n\r\n  // 更新現價\r\n  function insertCurrPrices() {\r\n    // console.log(docID);\r\n    // console.log(currDate);\r\n\r\n    const db = firebase.firestore();\r\n    var colRef = db.collection(colName).doc(docID);\r\n    const obj = { date: currDate, price: currPrice };\r\n    // console.log(obj);\r\n    colRef.update({\r\n      currPrices: firebase.firestore.FieldValue.arrayUnion(obj),\r\n    });\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  function numFormat(total) {\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n      /* $2,500.00 */\r\n      // style: \"currency\",\r\n      currency: 'USD',\r\n    });\r\n\r\n    return formatter.format(Math.round(total));\r\n    // 2,500\r\n  }\r\n\r\n  function setDefalut() {\r\n    setIsModalOpen(false);\r\n    setIsLoading(false);\r\n    setDocID('');\r\n    setStockName('');\r\n    setQty('');\r\n    setPrice('');\r\n  }\r\n  function updateCol() {\r\n    setIsLoading(true);\r\n    const db = firebase.firestore();\r\n    // 用 docID 判斷新增或更新\r\n    if (docID) {\r\n      var colRef = db.collection(colName).doc(docID);\r\n      colRef\r\n        .update({ stockName, qty, price })\r\n        .then(() => {\r\n          setDefalut();\r\n          // setIsModalOpen(false);\r\n          // setIsLoading(false);\r\n          // setDocID('');\r\n          // setQty('');\r\n          // setPrice('');\r\n          console.log('Document successfully updated!');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error updating document: ', error);\r\n        });\r\n    } else {\r\n      // 新增\r\n      db.collection(colName)\r\n        .add({\r\n          stockName,\r\n          qty,\r\n          price,\r\n        })\r\n        .then(() => {\r\n          setDefalut();\r\n          // setIsModalOpen(false);\r\n          // setIsLoading(false);\r\n          console.log('Document successfully created!');\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteDoc() {\r\n    setIsLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection(colName)\r\n      .doc(docID)\r\n      .delete()\r\n      .then(() => {\r\n        console.log('Document successfully deleted!');\r\n        setDefalut(); // setIsModalOpen(false);\r\n        // setIsLoading(false);\r\n        // setDocID('');\r\n        // setQty('');\r\n        // setPrice('');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error removing document: ', error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Modal open={isModalOpen} closeIcon onClose={() => setIsModalOpen(false)}>\r\n        <Modal.Header>Select a Photo</Modal.Header>\r\n        <Modal.Content image>\r\n          <Modal.Description>\r\n            <Header>編輯</Header>\r\n          </Modal.Description>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>名稱</label>\r\n              <input\r\n                value={stockName}\r\n                placeholder=\"\"\r\n                onChange={(e) => setStockName(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>數量</label>\r\n              <input\r\n                type=\"number\"\r\n                value={qty}\r\n                placeholder=\"\"\r\n                onChange={(e) => setQty(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>單價</label>\r\n              <input\r\n                type=\"number\"\r\n                value={price}\r\n                placeholder=\"\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <Button color=\"grey\" onClick={insertCurrPrices}>\r\n                新增明細\r\n              </Button>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Input\r\n                placeholder=\"date\"\r\n                label=\"日期\"\r\n                type=\"date\"\r\n                value={currDate}\r\n                onChange={(e) => setCurrDate(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Input\r\n                type=\"number\"\r\n                placeholder=\"price\"\r\n                label=\"價格\"\r\n                onChange={(e) => setCurrPrice(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n\r\n          <List>\r\n            {currPrices\r\n              ? currPrices.map((obj) => {\r\n                  return (\r\n                    <List.Item key={obj.date}>\r\n                      <List.Icon\r\n                        onClick={() =>\r\n                          updateCurrPrices(docID, {\r\n                            date: obj.date,\r\n                            price: obj.price,\r\n                          })\r\n                        }\r\n                        name=\"close\"\r\n                      />\r\n                      <List.Content>\r\n                        {obj.date}-{obj.price}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  );\r\n                })\r\n              : ''}\r\n          </List>\r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          {docID ? (\r\n            <Button\r\n              color=\"red\"\r\n              floated=\"left\"\r\n              loading={isLoading}\r\n              onClick={deleteDoc}\r\n            >\r\n              刪除\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          <Button color=\"blue\" loading={isLoading} onClick={updateCol}>\r\n            儲存\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      <Button\r\n        color=\"blue\"\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n          setDocID('');\r\n          setQty('');\r\n          setPrice('');\r\n        }}\r\n      >\r\n        新增\r\n      </Button>\r\n      <Header floated=\"right\">{numFormat(totalCurr)} - {numFormat(total)} = {numFormat(totalCurr-total)} </Header>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>名稱</Table.HeaderCell>\r\n            <Table.HeaderCell>股數</Table.HeaderCell>\r\n            <Table.HeaderCell>現價</Table.HeaderCell>\r\n            <Table.HeaderCell>成本</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"right\">小計</Table.HeaderCell>\r\n           \r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {incomes.map((income) => {\r\n            return (\r\n              <Table.Row\r\n                key={income.id}\r\n                onClick={() => {\r\n                  setStockName(income.stockName);\r\n                  setQty(income.qty);\r\n                  setPrice(income.price);\r\n                  setDocID(income.id);\r\n                  setCurrPrices(income.currPrices);\r\n                  setIsModalOpen(true);\r\n                }}\r\n              >\r\n                {/* <Table.Cell>{income.date.toDate().toLocaleDateString()}</Table.Cell> */}\r\n                <Table.Cell>{income.stockName}</Table.Cell>\r\n                <Table.Cell>{income.qty}</Table.Cell>\r\n                <Table.Cell>\r\n                  <List>\r\n                    {/* {income.currPrices?<List.Item>{income.currPrices[0].price}</List.Item>:''} */}\r\n                    {income.currPrices ? (\r\n                      <List.Item>\r\n                        {sortArray(income.currPrices)[0]?.price}\r\n                      </List.Item>\r\n                    ) : (\r\n                      ''\r\n                    )}                 \r\n                  </List>\r\n                </Table.Cell>\r\n                <Table.Cell>{income.price}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\">\r\n                  {numFormat(income.qty * (sortArray(income.currPrices)[0]?.price-income.price))}\r\n                </Table.Cell>\r\n               \r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </Container>\r\n  );\r\n}\r\nexport default stocks;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Header,\r\n  Table,\r\n  Form,\r\n  Modal,\r\n} from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport { Waypoint } from 'react-waypoint';\r\n\r\nfunction Expenses() {\r\n  const location = useLocation();\r\n  const url = new URLSearchParams(location.search);\r\n  const currAcc = url.get('acc');\r\n\r\n  const lastVisible = React.useRef();\r\n\r\n  const [rows, setRows] = React.useState([]);\r\n  React.useEffect(() => {\r\n    if (currAcc) {\r\n      firebase\r\n        .firestore()\r\n        .collection('expenses')\r\n        .where('account_name', '==', currAcc)\r\n        .orderBy('spend_date', 'desc')\r\n        .limit(20)\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n\r\n          setRows(data);\r\n        });\r\n    } else {\r\n      firebase\r\n        .firestore()\r\n        .collection('expenses')\r\n        .limit(20)\r\n        .orderBy('spend_date', 'desc')\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n          // 紀錄最後一份文件\r\n          lastVisible.current = snapshot.docs[snapshot.docs.length - 1];\r\n          // console.log(lastVisible.data())\r\n\r\n          setRows(data);\r\n        });\r\n    }\r\n  }, [currAcc]);\r\n  return (\r\n    <>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell width={3}>日期</Table.HeaderCell>\r\n            <Table.HeaderCell width={5}>項目</Table.HeaderCell>\r\n            <Table.HeaderCell>金額</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {rows.map((row, i) => {\r\n            return (\r\n              <Table.Row key={i}>\r\n                <Table.Cell>{row.spend_date}</Table.Cell>\r\n                <Table.Cell>{row.note}</Table.Cell>\r\n                <Table.Cell>{row.expense}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n      <Waypoint\r\n        onEnter={() => {\r\n          if (lastVisible.current) {\r\n            if(currAcc){\r\n              firebase\r\n              .firestore()\r\n              .collection('expenses')\r\n              .where('account_name','==',currAcc)\r\n              .orderBy('spend_date', 'desc')\r\n              .startAfter(lastVisible.current)\r\n              .limit(20)\r\n              .onSnapshot((snapshot) => {\r\n                const data = snapshot.docs.map((doc) => {\r\n                  return { ...doc.data(), id: doc.id };\r\n                });\r\n                // 紀錄最後一份文件\r\n                lastVisible.current = snapshot.docs[snapshot.docs.length - 1];   \r\n                setRows([...rows,...data]);\r\n              });\r\n            }else{\r\n              firebase\r\n              .firestore()\r\n              .collection('expenses')\r\n              \r\n              .orderBy('spend_date', 'desc')\r\n              .startAfter(lastVisible.current)\r\n              .limit(20)\r\n              .onSnapshot((snapshot) => {\r\n                const data = snapshot.docs.map((doc) => {\r\n                  return { ...doc.data(), id: doc.id };\r\n                });\r\n                // 紀錄最後一份文件\r\n                lastVisible.current = snapshot.docs[snapshot.docs.length - 1];   \r\n                setRows([...rows,...data]);\r\n              });\r\n\r\n            }\r\n           \r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React from 'react';\r\nimport {Link, useLocation} from 'react-router-dom'\r\nimport { Container, Table, Grid, List, Icon, Image } from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport Expenses from './Expenses';\r\nfunction Accounts() {\r\n  const location = useLocation();\r\n  const url = new URLSearchParams(location.search)\r\n  const currAcc = url.get('acc')\r\n  // const user = firebase.auth().currentUser;\r\n  // 存放點選帳戶的值,再用此值和帳戶的值做比對,呈現三角圖示\r\n  const [accName, setAccName] = React.useState('');\r\n  const [rows, setRows] = React.useState([]);\r\n  React.useEffect(() => {\r\n    // firebase.auth().onAuthStateChanged((user) => {\r\n    firebase\r\n      .firestore()\r\n      .collection('accounts')\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return doc.data();\r\n        });\r\n        setRows(data);\r\n      });\r\n\r\n    // if (user) {\r\n    //   firebase\r\n    //     .firestore()\r\n    //     .collection('accounts')\r\n    //     .where('user_id', '==', user.uid)\r\n\r\n    //     .onSnapshot((snapshot) => {\r\n    //       const data = snapshot.docs.map((doc) => {\r\n    //         return doc.data();\r\n    //       });\r\n    //       setRows(data);\r\n    //     });\r\n\r\n    // } else {\r\n\r\n    //   firebase\r\n    //     .firestore()\r\n    //     .collection('accounts')\r\n    //     .onSnapshot((snapshot) => {\r\n    //       const data = snapshot.docs.map((doc) => {\r\n    //         return doc.data();\r\n    //       });\r\n    //       setRows([]);\r\n    //     });\r\n    // }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      \r\n      <Grid columns={3} divided>\r\n        <Grid.Row>\r\n          <Grid.Column width={3}>\r\n            <List selection  size=\"large\" >\r\n              {rows.map((row, i) => {\r\n                return (\r\n                  <List.Item active={currAcc==row.name} key={i} as={Link} to={`/accounts?acc=${row.name}`}>\r\n                    {currAcc == row.name ? <Icon name=\"right triangle\" /> : ''}\r\n                    <List.Content onClick={(e) => setAccName(row.name)}>\r\n                      {row.name}\r\n                    </List.Content>\r\n                  </List.Item>\r\n                );\r\n              })}\r\n            </List>\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Expenses/>\r\n          </Grid.Column>\r\n          <Grid.Column width={3}>\r\n            <Image src=\"https://react.semantic-ui.com/images/wireframe/media-paragraph.png\" />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      {/* <Dropdown text=\"帳戶\">\r\n        <Dropdown.Menu>\r\n          {rows.map((row, i) => {\r\n            return <Dropdown.Item key={i} text={row.name} />;\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown> */}\r\n    </Container>\r\n  );\r\n}\r\nexport default Accounts;\r\n","import { Button, Container, Header, Input, Form } from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport React from 'react';\r\nfunction MySettings() {\r\n  const user = firebase.auth().currentUser || {};\r\n  const [displayName, setDisplayName] = React.useState('');\r\n  React.useEffect(() => {\r\n    // setDisplayName(user.displayName)\r\n  });\r\n  function updateUserProfile() {\r\n    user\r\n      .updateProfile({\r\n        displayName: displayName,\r\n      })\r\n      .then(() => {\r\n        setDisplayName('');\r\n      });\r\n  }\r\n  return (\r\n    <Container>\r\n      <Header>{user.displayName}</Header>\r\n      {/* <Input\r\n        value={displayName}\r\n        onChange={(e) => {\r\n          setDisplayName(e.target.value);\r\n        }}\r\n      />\r\n      <Button onClick={updateUserProfile}>更新</Button> */}\r\n\r\n     \r\n      <Form onSubmit={updateUserProfile}>\r\n          <Form.Group>\r\n            <Form.Input\r\n              placeholder='Name'\r\n              name='name'\r\n              value={displayName}\r\n              onChange={(e) => {\r\n                setDisplayName(e.target.value);\r\n              }}\r\n            />\r\n          \r\n            <Form.Button color='teal' content='更新' />\r\n          </Form.Group>\r\n        </Form>\r\n\r\n\r\n\r\n      \r\n      \r\n    </Container>\r\n  );\r\n}\r\nexport default MySettings;\r\n","import React from 'react'\r\nimport { Container, Form, Button, Input } from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport {useHistory} from 'react-router-dom'\r\nfunction LoginForm() {\r\n  const history = useHistory()\r\n  const [email, setEmail] = React.useState('mkdodos@gmail.com');\r\n  const [password, setPassword] = React.useState('123456')\r\n  // const [user, setUser] = React.useState(null);\r\n  function login() {\r\n    firebase.auth().signInWithEmailAndPassword(email,password).then((user)=>{\r\n      console.log(user)\r\n      history.push('/accounts')\r\n      // setUser(currUser)\r\n    })\r\n    \r\n  }\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={login}>\r\n        <Form.Field>\r\n          <label>帳號</label>\r\n          <Input  value={email}\r\n          onChange={e=>setEmail(e.target.value)}\r\n          placeholder=\"請輸入帳號\" />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>密碼</label>\r\n          <input value={password}\r\n          onChange={e=>setPassword(e.target.value)}\r\n          placeholder=\"請輸入密碼\" />\r\n        </Form.Field>  \r\n        <Form.Button>確定</Form.Button>\r\n             \r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n} from 'react-router-dom';\r\nimport Incomes from './components/Incomes';\r\nimport Stocks from './components/Stocks';\r\nimport Accounts from './components/Accounts';\r\nimport MySettings from './components/MySettings';\r\nimport { Menu, List, Container, Dropdown } from 'semantic-ui-react';\r\n\r\nimport firebase from './utils/firebase';\r\nimport 'firebase/auth';\r\nimport LoginForm from './components/LoginForm';\r\n\r\nfunction Header() {\r\n  \r\n  const [user, setUser] = React.useState(null);\r\n  React.useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((currUser) => {\r\n      setUser(currUser);\r\n      // currUser.updateProfile({displayName:'馬克'})\r\n    });\r\n    // console.log(user)\r\n  });\r\n  const history = useHistory();\r\n  function logout() {\r\n    \r\n    firebase.auth().signOut().then(()=>{\r\n      // history.push('/login-form');\r\n    });\r\n    \r\n  }\r\n  const [activeItem, setActiveItem] = useState('');\r\n  return (\r\n    <Router>\r\n      <Menu>\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/incomes\"\r\n          active={activeItem == 'editor'}\r\n          onClick={() => setActiveItem('editor')}\r\n        >\r\n          外送收入\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/stocks\"\r\n          active={activeItem == 'review'}\r\n          onClick={() => setActiveItem('review')}\r\n        >\r\n          股票\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/accounts\"\r\n          active={activeItem == 'accounts'}\r\n          onClick={() => setActiveItem('accounts')}\r\n        >\r\n          帳戶\r\n        </Menu.Item>\r\n        <Menu.Menu position=\"right\">\r\n          {user ? (\r\n            // <Menu.Item onClick={() => firebase.auth().signOut()}>\r\n\r\n            <Dropdown item text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item text=\"基本資料\" as={Link} to=\"my-settings\" />\r\n                <Dropdown.Item text=\"登出\" onClick={logout} />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ) : (\r\n            // </Menu.Item>\r\n            <Menu.Item\r\n              as={Link}\r\n              to=\"/login-form\"\r\n              active={activeItem == 'login-form'}\r\n              onClick={() => setActiveItem('login-form')}\r\n            >\r\n              登入表單\r\n            </Menu.Item>\r\n          )}\r\n        </Menu.Menu>\r\n      </Menu>\r\n\r\n      <Switch>\r\n        <Route path=\"/incomes\">\r\n          <Incomes />\r\n        </Route>\r\n        <Route path=\"/stocks\">\r\n          <Stocks />\r\n        </Route>\r\n        <Route path=\"/accounts\">\r\n          <Accounts />\r\n        </Route>\r\n        <Route path=\"/login-form\">\r\n          <LoginForm />\r\n        </Route>\r\n        <Route path=\"/my-settings\">\r\n          <MySettings />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n// import firebase from \"./utils/firebase\";\r\n// import \"firebase/auth\";\r\n// import Incomes from './components/Incomes';\r\n\r\n\r\nimport Header from './Header';\r\n\r\nfunction App() {\r\n  const [activeItem, setActiveItem] = React.useState('');\r\n  React.useEffect(() => {});\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      \r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import App from './App';\r\nimport ReactDom from 'react-dom'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\n\r\n\r\nimport 'firebase/firestore';\r\n\r\nconst container = document.getElementById('root');\r\nReactDom.render(<App/>,container)"],"sourceRoot":""}