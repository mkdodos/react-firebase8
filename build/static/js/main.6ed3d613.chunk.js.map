{"version":3,"sources":["utils/firebase.js","components/Signup.js","components/Incomes.js","components/Stocks.js","contexts/AuthContext.js","components/Accounts.js","components/MySettings.js","components/LoginForm.js","components/Expenses.js","components/AccExpenses.js","components/Dashboard.js","components/Balances.js","Header.js","App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Signup","emailRef","useRef","passwordRef","passwordConfirmRef","useState","error","setError","history","useHistory","Card","Body","className","Alert","variant","Form","onSubmit","e","preventDefault","current","value","push","Group","id","Label","Control","type","ref","required","Button","Incomes","React","incomes","setIncomes","isModalOpen","setIsModalOpen","isLoading","setIsLoading","Date","toLocaleDateString","incomeDate","setIncomeDate","amt","setAmt","total","setTotal","note","setNote","docID","setDocID","useEffect","firestore","collection","orderBy","onSnapshot","snapshot","data","docs","map","doc","temp","forEach","income","Modal","open","closeIcon","onClose","Header","Content","image","Description","Field","placeholder","onChange","target","Actions","color","floated","loading","onClick","delete","then","console","log","catch","db","update","date","add","Container","Table","unstackable","Row","HeaderCell","Cell","stocks","colName","stockName","setStockName","qty","setQty","price","setPrice","currPrices","setCurrPrices","toISOString","slice","currDate","setCurrDate","currPrice","setCurrPrice","totalCurr","setTotalCurr","sortArray","arr","sort","a","b","numFormat","Intl","NumberFormat","currency","format","Math","round","setDefalut","colRef","obj","FieldValue","arrayUnion","Input","label","List","Item","Icon","editedIndex","findIndex","fobj","splice","arrayRemove","updateCurrPrices","name","textAlign","AuthContext","createContext","useAuth","useContext","AuthProvider","children","currentUser","setCurrentUser","setLoading","onAuthStateChanged","user","logout","signOut","Provider","Accounts","rows","setRows","accName","setAccName","setOpen","where","uid","row","i","onOpen","trigger","docRef","updateAcc","user_id","createdAt","Timestamp","now","createAcc","MySettings","displayName","setDisplayName","updateProfile","content","LoginForm","email","setEmail","password","setPassword","Grid","Column","mobile","tablet","computer","Segment","signInWithEmailAndPassword","primary","Expenses","location","useLocation","currAcc","URLSearchParams","search","get","lastVisible","setDefault","limit","length","account_name","expense","spend_date","updateRow","createRow","width","onEnter","startAfter","AccExpenses","columns","divided","selection","size","active","as","Link","to","Dashboard","Balances","dateRef","titleRef","amtRef","setRow","rows2","setRows2","inverted","icon","title","account_id","setUser","currUser","activeItem","setActiveItem","Menu","position","Dropdown","item","text","path","Stocks","component","exact","App","container","document","getElementById","ReactDom","render"],"mappings":"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","file":"static/js/main.6ed3d613.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyCxMvi4M0Xai8kuqn3r970KLassk-fTlGw\",\r\n//   authDomain: \"social-cool-16812.firebaseapp.com\",\r\n//   projectId: \"social-cool-16812\",\r\n//   storageBucket: \"social-cool-16812.appspot.com\",\r\n//   messagingSenderId: \"443839253633\",\r\n//   appId: \"1:443839253633:web:105b938de5b05af1f15180\"\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyClLeHQJMt3BzbrK_AHpWeq0nlqzY2r5ik\",\r\n  authDomain: \"money-39797.firebaseapp.com\",\r\n  projectId: \"money-39797\",\r\n  storageBucket: \"money-39797.appspot.com\",\r\n  messagingSenderId: \"142963352306\",\r\n  appId: \"1:142963352306:web:ac3c09e593009a5175666b\",\r\n  measurementId: \"G-012VKYDZ07\"\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nexport const auth = app.auth()\r\n\r\nexport default firebase\r\n// Initialize Cloud Firestore and get a reference to the service\r\n// const db = firebase.firestore();","import React, { useRef, useState } from 'react';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { auth } from \"../utils/firebase\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function Signup() {\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n  const [error, setError] = useState(\"\")\r\n  const history = useHistory()\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      return setError(\"Passwords do not match\")\r\n    }\r\n\r\n    // auth.createUserWithEmailAndPassword(emailRef.current.value, passwordRef.current.value)\r\nhistory.push('/')\r\n\r\n    setError(\"\")\r\n   \r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Card.Body>\r\n          <h2 className=\"text-center mb-4\">Sign up</h2>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group id=\"email\" className=\"mb-3\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id=\"password\" className=\"mb-3\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordRef}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group id=\"password-confirm\" className=\"mb-3\">\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                ref={passwordConfirmRef}\r\n                required\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button className=\"w-10\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n      <div className=\"w-100 text-center mt-2\">\r\n        Already have an account? Log in\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Container, Button, Header, Table, Form, Modal } from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\n// import 'firebase/firestore';\r\n\r\nfunction Incomes() { \r\n\r\n  const [incomes, setIncomes] = React.useState([]);\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const [incomeDate, setIncomeDate] = React.useState(\r\n    new Date().toLocaleDateString()\r\n  );\r\n  const [amt, setAmt] = React.useState('');\r\n  const [total, setTotal] = React.useState(0);\r\n  const [note, setNote] = React.useState('');\r\n  const [docID, setDocID] = React.useState('');\r\n\r\n  // onSnapshot 監聽資料有變動時執行,在新增後,資料即時更新\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection('incomes')\r\n      .orderBy(\"date\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          \r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        let temp = 0;\r\n        data.forEach((income)=>{\r\n          temp +=  income.amt*1\r\n        })\r\n        setTotal(temp)       \r\n        setIncomes(data);        \r\n      })     \r\n  \r\n  }, []);\r\n\r\n  \r\n\r\n  function deleteIncome() {\r\n    setIsLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection('incomes')\r\n      .doc(docID)\r\n      .delete()\r\n      .then(() => {\r\n        console.log('Document successfully deleted!');\r\n        setIsModalOpen(false);\r\n        setIsLoading(false);\r\n        setDocID('');\r\n        setAmt('');\r\n        setNote('');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error removing document: ', error);\r\n      });\r\n  }\r\n\r\n  function updateIncome() {\r\n    setIsLoading(true);\r\n    const db = firebase.firestore();\r\n\r\n    // 用 docID 判斷新增或更新\r\n    if (docID) {\r\n      var washingtonRef = db.collection('incomes').doc(docID);\r\n      washingtonRef\r\n        .update({ date: incomeDate, amt: amt, note: note })\r\n        .then(() => {\r\n          setIsModalOpen(false);\r\n          setIsLoading(false);\r\n          setDocID('');\r\n          setAmt('');\r\n          setNote('');\r\n          console.log('Document successfully updated!');\r\n        })\r\n        .catch((error) => {\r\n          // The document probably doesn't exist.\r\n          console.error('Error updating document: ', error);\r\n        });\r\n    } else {\r\n      // 新增\r\n      db.collection('incomes')\r\n        .add({\r\n          date: incomeDate,\r\n          amt: amt,\r\n          note: note,\r\n        })\r\n        .then(() => {\r\n          setIsModalOpen(false);\r\n          setIsLoading(false);\r\n          console.log('Document successfully created!');\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={isModalOpen} closeIcon onClose={() => setIsModalOpen(false)}>\r\n        <Modal.Header>Select a Photo</Modal.Header>\r\n        <Modal.Content image>\r\n          <Modal.Description>\r\n            <Header>編輯</Header>\r\n          </Modal.Description>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>日期</label>\r\n              <input\r\n                value={incomeDate}\r\n                placeholder=\"\"\r\n                onChange={(e) => setIncomeDate(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>金額</label>\r\n              <input type=\"number\"\r\n                value={amt}\r\n                placeholder=\"\"\r\n                onChange={(e) => setAmt(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>備註</label>\r\n              <input\r\n                value={note}\r\n                placeholder=\"\"\r\n                onChange={(e) => setNote(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          {docID ? (\r\n            <Button\r\n              color=\"red\"\r\n              floated=\"left\"\r\n              loading={isLoading}\r\n              onClick={deleteIncome}\r\n            >\r\n              刪除\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          <Button color=\"blue\" loading={isLoading} onClick={updateIncome}>\r\n            儲存\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      {/* 用 submit 送出造成用量超額 */}\r\n      {/* <Button type='submit' onClick={addIncome}>Submit</Button> */}\r\n  \r\n  \r\n      <Container>\r\n        \r\n       \r\n  \r\n      <Button\r\n        color=\"blue\"\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n          setDocID('');\r\n          setAmt('');\r\n          setNote('');\r\n          setIncomeDate(new Date().toLocaleDateString())\r\n        }}\r\n      >\r\n        新增\r\n      </Button>\r\n      <Header>{total}</Header>\r\n      \r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>日期</Table.HeaderCell>\r\n            <Table.HeaderCell>收入</Table.HeaderCell>\r\n            <Table.HeaderCell>備註</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {incomes.map((income) => {\r\n            return (\r\n              <Table.Row\r\n                onClick={() => {\r\n                  setIncomeDate(income.date);\r\n                  setNote(income.note);\r\n                  setAmt(income.amt);\r\n                  setDocID(income.id);\r\n\r\n                  setIsModalOpen(true);\r\n                }}\r\n                key={income.id}\r\n              >\r\n                <Table.Cell>{income.date}</Table.Cell>\r\n                <Table.Cell>{income.amt}</Table.Cell>\r\n                <Table.Cell>{income.note}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n         \r\n        </Table.Body>\r\n      </Table>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Incomes;\r\n","import React from 'react';\r\nimport firebase from '../utils/firebase';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Header,\r\n  Table,\r\n  Form,\r\n  Modal,\r\n  List,\r\n  Input,\r\n  Label,\r\n  Icon,\r\n} from 'semantic-ui-react';\r\n// import {FieldValue} from 'firebase/firestore'\r\n\r\nfunction stocks() {\r\n  // 文件集合名稱\r\n  const colName = 'stocks';\r\n  // 文件集合陣列\r\n  const [incomes, setIncomes] = React.useState([]);\r\n  //\r\n  const [isModalOpen, setIsModalOpen] = React.useState(false);\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  // 文件欄位\r\n  const [docID, setDocID] = React.useState('');\r\n  const [stockName, setStockName] = React.useState('');\r\n  const [qty, setQty] = React.useState('');\r\n  const [price, setPrice] = React.useState(0);\r\n  const [currPrices, setCurrPrices] = React.useState([]);\r\n\r\n  //\r\n  // 文件欄位現價明細\r\n  const [currDate, setCurrDate] = React.useState(\r\n    new Date().toISOString().slice(0, 10)\r\n  );\r\n  const [currPrice, setCurrPrice] = React.useState('');\r\n\r\n  // const [selectedItem, setSelectedItem]= React.useState({});\r\n\r\n  // 合計\r\n  const [total, setTotal] = React.useState(0);\r\n  const [totalCurr, setTotalCurr] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(colName)\r\n      // .orderBy('date', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {          \r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setIncomes(data);\r\n        // 計算合計                \r\n        let temp = 0;\r\n        data.forEach((income) => {\r\n          temp += income.qty * income.price;\r\n          // if(income.currPrices)\r\n          // console.log(sortArray(income.currPrices)[0]?.price)\r\n        });\r\n        setTotal(temp);\r\n        temp = 0;\r\n        data.forEach((income) => {\r\n          temp += income.qty * sortArray(income.currPrices)[0]?.price;          \r\n        });\r\n\r\n        setTotalCurr(temp);\r\n        // console.log(sortArray(data[0].currPrices)[0].price)\r\n        \r\n      });\r\n\r\n    // updateCurrPrices('89ru4gSP1QMShWfESBvP');\r\n  }, []);\r\n  // 排序\r\n  function sortArray(arr) {\r\n    const result = arr.sort((a, b) => {\r\n      return a.date < b.date ? 1 : -1;\r\n    });\r\n    return result;\r\n  }\r\n  // 更新現價\r\n  function updateCurrPrices(id, obj) {\r\n    const db = firebase.firestore();\r\n    var colRef = db.collection(colName).doc(id);\r\n    \r\n    const editedIndex = currPrices.findIndex(fobj=>{\r\n      return fobj.date === obj.date\r\n    })\r\n    currPrices.splice(editedIndex,1)\r\n    // console.log(editedIndex); // 👉️ 1\r\n    colRef.update({      \r\n      currPrices: firebase.firestore.FieldValue.arrayRemove(obj),\r\n    });\r\n   \r\n    // firebase.firestore.FieldValue.arrayUnion(\"greater_virginia\")\r\n    // firebase.firestore.FieldValue.arrayRemove(\"east_coast\")\r\n    // const obj = { date: '0719', price: '456' };\r\n    // const editedIndex = currPrices.indexOf(obj);\r\n    // console.log(editedIndex)\r\n    \r\n    // console.log(obj.date)\r\n    // console.log(currPrices)\r\n    // console.log(obj)\r\n\r\n    \r\n  }\r\n\r\n  // 更新現價\r\n  function insertCurrPrices() {\r\n    // console.log(docID);\r\n    // console.log(currDate);\r\n\r\n    const db = firebase.firestore();\r\n    var colRef = db.collection(colName).doc(docID);\r\n    const obj = { date: currDate, price: currPrice };\r\n    // console.log(obj);\r\n    colRef.update({\r\n      currPrices: firebase.firestore.FieldValue.arrayUnion(obj),\r\n    });\r\n    setIsModalOpen(false);\r\n  }\r\n\r\n  function numFormat(total) {\r\n    var formatter = new Intl.NumberFormat('en-US', {\r\n      /* $2,500.00 */\r\n      // style: \"currency\",\r\n      currency: 'USD',\r\n    });\r\n\r\n    return formatter.format(Math.round(total));\r\n    // 2,500\r\n  }\r\n\r\n  function setDefalut() {\r\n    setIsModalOpen(false);\r\n    setIsLoading(false);\r\n    setDocID('');\r\n    setStockName('');\r\n    setQty('');\r\n    setPrice('');\r\n  }\r\n  function updateCol() {\r\n    setIsLoading(true);\r\n    const db = firebase.firestore();\r\n    // 用 docID 判斷新增或更新\r\n    if (docID) {\r\n      var colRef = db.collection(colName).doc(docID);\r\n      colRef\r\n        .update({ stockName, qty, price })\r\n        .then(() => {\r\n          setDefalut();\r\n          // setIsModalOpen(false);\r\n          // setIsLoading(false);\r\n          // setDocID('');\r\n          // setQty('');\r\n          // setPrice('');\r\n          console.log('Document successfully updated!');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error updating document: ', error);\r\n        });\r\n    } else {\r\n      // 新增\r\n      db.collection(colName)\r\n        .add({\r\n          stockName,\r\n          qty,\r\n          price,\r\n        })\r\n        .then(() => {\r\n          setDefalut();\r\n          // setIsModalOpen(false);\r\n          // setIsLoading(false);\r\n          console.log('Document successfully created!');\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteDoc() {\r\n    setIsLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection(colName)\r\n      .doc(docID)\r\n      .delete()\r\n      .then(() => {\r\n        console.log('Document successfully deleted!');\r\n        setDefalut(); // setIsModalOpen(false);\r\n        // setIsLoading(false);\r\n        // setDocID('');\r\n        // setQty('');\r\n        // setPrice('');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error removing document: ', error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Modal open={isModalOpen} closeIcon onClose={() => setIsModalOpen(false)}>\r\n        <Modal.Header>Select a Photo</Modal.Header>\r\n        <Modal.Content image>\r\n          <Modal.Description>\r\n            <Header>編輯</Header>\r\n          </Modal.Description>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>名稱</label>\r\n              <input\r\n                value={stockName}\r\n                placeholder=\"\"\r\n                onChange={(e) => setStockName(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>數量</label>\r\n              <input\r\n                type=\"number\"\r\n                value={qty}\r\n                placeholder=\"\"\r\n                onChange={(e) => setQty(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>單價</label>\r\n              <input\r\n                type=\"number\"\r\n                value={price}\r\n                placeholder=\"\"\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n\r\n            <Form.Field>\r\n              <Button color=\"grey\" onClick={insertCurrPrices}>\r\n                新增明細\r\n              </Button>\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Input\r\n                placeholder=\"date\"\r\n                label=\"日期\"\r\n                type=\"date\"\r\n                value={currDate}\r\n                onChange={(e) => setCurrDate(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <Input\r\n                type=\"number\"\r\n                placeholder=\"price\"\r\n                label=\"價格\"\r\n                onChange={(e) => setCurrPrice(e.target.value)}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n\r\n          <List>\r\n            {currPrices\r\n              ? currPrices.map((obj) => {\r\n                  return (\r\n                    <List.Item key={obj.date}>\r\n                      <List.Icon\r\n                        onClick={() =>\r\n                          updateCurrPrices(docID, {\r\n                            date: obj.date,\r\n                            price: obj.price,\r\n                          })\r\n                        }\r\n                        name=\"close\"\r\n                      />\r\n                      <List.Content>\r\n                        {obj.date}-{obj.price}\r\n                      </List.Content>\r\n                    </List.Item>\r\n                  );\r\n                })\r\n              : ''}\r\n          </List>\r\n        </Modal.Content>\r\n\r\n        <Modal.Actions>\r\n          {docID ? (\r\n            <Button\r\n              color=\"red\"\r\n              floated=\"left\"\r\n              loading={isLoading}\r\n              onClick={deleteDoc}\r\n            >\r\n              刪除\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          <Button color=\"blue\" loading={isLoading} onClick={updateCol}>\r\n            儲存\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      <Button\r\n        color=\"blue\"\r\n        onClick={() => {\r\n          setIsModalOpen(true);\r\n          setDocID('');\r\n          setQty('');\r\n          setPrice('');\r\n        }}\r\n      >\r\n        新增\r\n      </Button>\r\n      <Header floated=\"right\">{numFormat(totalCurr)} - {numFormat(total)} = {numFormat(totalCurr-total)} </Header>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>名稱</Table.HeaderCell>\r\n            <Table.HeaderCell>股數</Table.HeaderCell>\r\n            <Table.HeaderCell>現價</Table.HeaderCell>\r\n            <Table.HeaderCell>成本</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"right\">小計</Table.HeaderCell>\r\n           \r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {incomes.map((income) => {\r\n            return (\r\n              <Table.Row\r\n                key={income.id}\r\n                onClick={() => {\r\n                  setStockName(income.stockName);\r\n                  setQty(income.qty);\r\n                  setPrice(income.price);\r\n                  setDocID(income.id);\r\n                  setCurrPrices(income.currPrices);\r\n                  setIsModalOpen(true);\r\n                }}\r\n              >\r\n                {/* <Table.Cell>{income.date.toDate().toLocaleDateString()}</Table.Cell> */}\r\n                <Table.Cell>{income.stockName}</Table.Cell>\r\n                <Table.Cell>{income.qty}</Table.Cell>\r\n                <Table.Cell>\r\n                  <List>\r\n                    {/* {income.currPrices?<List.Item>{income.currPrices[0].price}</List.Item>:''} */}\r\n                    {income.currPrices ? (\r\n                      <List.Item>\r\n                        {sortArray(income.currPrices)[0]?.price}\r\n                      </List.Item>\r\n                    ) : (\r\n                      ''\r\n                    )}                 \r\n                  </List>\r\n                </Table.Cell>\r\n                <Table.Cell>{income.price}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\">\r\n                  {numFormat(income.qty * (sortArray(income.currPrices)[0]?.price-income.price))}\r\n                </Table.Cell>\r\n               \r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </Container>\r\n  );\r\n}\r\nexport default stocks;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../utils/firebase';\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true)\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  function logout() {\r\n    return auth.signOut()\r\n  }\r\n\r\n  const value = {\r\n    currentUser,\r\n    logout\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  List,\r\n  Icon,\r\n  Image,\r\n  Modal,\r\n  Header,\r\n  Form,\r\n  Table,\r\n} from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n// import Expenses from './AccExpenses';\r\nfunction Accounts() {\r\n  const [rows, setRows] = React.useState([]);\r\n  const [accName, setAccName] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n  const [docID, setDocID] = React.useState('');\r\n  const { currentUser } = useAuth()\r\n  // const user = firebase.auth().currentUser;\r\n \r\n \r\n \r\n  React.useEffect(() => {\r\n   \r\n    \r\n    if (currentUser) {\r\n      firebase\r\n        .firestore()\r\n        .collection('accounts')\r\n        .where('user_id', '==', currentUser.uid)\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n          setRows(data);\r\n        });\r\n    }\r\n\r\n\r\n  }, []);\r\n\r\n  // 新增帳戶\r\n  function createAcc() {\r\n    // console.log(accName)\r\n    setOpen(false);\r\n    setAccName('');\r\n    const row = {\r\n      name: accName,\r\n      user_id: currentUser.uid,\r\n      createdAt: firebase.firestore.Timestamp.now()\r\n    };\r\n    firebase\r\n      .firestore()\r\n      .collection('accounts')\r\n      .add(row)\r\n      .then(() => {\r\n        console.log('create');\r\n      });\r\n  }\r\n\r\n  function updateAcc() {\r\n    const db = firebase.firestore();\r\n    var docRef = db.collection('accounts').doc(docID);\r\n    const row = {\r\n      name: accName,\r\n      // user_id: user.uid,\r\n    };\r\n    docRef.update(row).then(() => {\r\n      setOpen(false);\r\n      setAccName('');\r\n      setDocID('');\r\n    });\r\n  }\r\n\r\n  function saveRow() {\r\n    if (docID) {\r\n      updateAcc();\r\n    } else {\r\n      createAcc();\r\n    }\r\n  }\r\n\r\n  function deleteRow() {\r\n    // setIsLoading(true);\r\n    const db = firebase.firestore();\r\n    db.collection('accounts')\r\n      .doc(docID)\r\n      .delete()\r\n      .then(() => {\r\n        console.log('Document successfully deleted!');\r\n        setOpen(false);\r\n        // setIsLoading(false);\r\n        setDocID('');\r\n        setAccName('');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error removing document: ', error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>名稱</Table.HeaderCell>\r\n           \r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {rows.map((row, i) => {\r\n            return (\r\n              <Table.Row\r\n                onClick={() => {\r\n                  setAccName(row.name);\r\n                  setDocID(row.id);\r\n                  setOpen(true);\r\n                }}\r\n                key={i}\r\n              >\r\n                <Table.Cell>{row.name}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      <Modal\r\n        closeIcon\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => {\r\n          setOpen(true);\r\n          setAccName('')\r\n        }}\r\n        open={open}\r\n        trigger={<Button>新增</Button>}\r\n      >\r\n        <Modal.Header>新增帳戶</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>名稱</label>\r\n              <input\r\n                value={accName}\r\n                onChange={(e) => {\r\n                  setAccName(e.target.value);\r\n                }}\r\n                placeholder=\"請輸入帳戶名稱\"\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          {docID ? (\r\n            <Button color=\"red\" floated=\"left\" onClick={deleteRow}>\r\n              刪除\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          <Button color=\"blue\" onClick={saveRow}>\r\n            儲存\r\n          </Button>\r\n\r\n          {/* <Button color=\"red\" onClick={() => setOpen(false)}>\r\n                  刪除\r\n                </Button>\r\n                <Button color=\"black\" onClick={() => setOpen(false)}>\r\n                  新增\r\n                </Button> */}\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\nexport default Accounts;\r\n","import { Button, Container, Header, Input, Form } from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport React from 'react';\r\nfunction MySettings({user}) {\r\n  // const user = firebase.auth().currentUser || {};\r\n  const [displayName, setDisplayName] = React.useState('');\r\n  React.useEffect(() => {\r\n    // setDisplayName(user.displayName)\r\n  });\r\n  function updateUserProfile() {\r\n    user\r\n      .updateProfile({\r\n        displayName: displayName,\r\n      })\r\n      .then(() => {\r\n        setDisplayName('');\r\n      });\r\n  }\r\n  return (\r\n    <Container>\r\n      <Header>{user.displayName}</Header>\r\n      {/* <Input\r\n        value={displayName}\r\n        onChange={(e) => {\r\n          setDisplayName(e.target.value);\r\n        }}\r\n      />\r\n      <Button onClick={updateUserProfile}>更新</Button> */}\r\n\r\n     \r\n      <Form onSubmit={updateUserProfile}>\r\n          <Form.Group>\r\n            <Form.Input\r\n              placeholder='Name'\r\n              name='name'\r\n              value={displayName}\r\n              onChange={(e) => {\r\n                setDisplayName(e.target.value);\r\n              }}\r\n            />\r\n          \r\n            <Form.Button color='teal' content='更新' />\r\n          </Form.Group>\r\n        </Form>\r\n\r\n\r\n\r\n      \r\n      \r\n    </Container>\r\n  );\r\n}\r\nexport default MySettings;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Form,\r\n  Button,\r\n  Icon,\r\n  Input,\r\n  Card,\r\n  Grid,\r\n  Image,\r\n  Segment,\r\n} from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport { useHistory } from 'react-router-dom';\r\nfunction LoginForm() {\r\n  const history = useHistory();\r\n  const [email, setEmail] = React.useState('mkdodos@gmail.com');\r\n  const [password, setPassword] = React.useState('123456');\r\n  // const [user, setUser] = React.useState(null);\r\n  function login() {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        // console.log(user)\r\n        history.push('/acc-expenses');\r\n        // setUser(currUser)\r\n      });\r\n  }\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <Grid>\r\n          <Grid.Column mobile={16} tablet={3} computer={5}>\r\n            {/* <Segment>2</Segment> */}\r\n          </Grid.Column>\r\n          <Grid.Column mobile={16} tablet={10} computer={6}>\r\n            <Segment>\r\n            <Form onSubmit={login}>\r\n              <Form.Field>\r\n                <label>帳號</label>\r\n                <Input\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  placeholder=\"請輸入帳號\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Field>\r\n                <label>密碼</label>\r\n                <input\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  placeholder=\"請輸入密碼\"\r\n                />\r\n              </Form.Field>\r\n              <Form.Button primary>確定</Form.Button>\r\n            </Form>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column mobile={16} tablet={3} computer={5}>\r\n            {/* <Segment>2</Segment> */}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Header,\r\n  Table,\r\n  Form,\r\n  Modal,\r\n} from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport { Waypoint } from 'react-waypoint';\r\n\r\nfunction Expenses() {\r\n  const location = useLocation();\r\n  const url = new URLSearchParams(location.search);\r\n  const currAcc = url.get('acc');\r\n\r\n  const lastVisible = React.useRef();\r\n\r\n  const [rows, setRows] = React.useState([]);\r\n  const [docID, setDocID] = React.useState('');\r\n  const [note, setNote] = React.useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n  const [amt, setAmt] = React.useState('');\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (currAcc) {\r\n      firebase\r\n        .firestore()\r\n        .collection('expenses')\r\n        .where('account_name', '==', currAcc)\r\n        .orderBy('spend_date', 'desc')\r\n        .limit(20)\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n\r\n          // 紀錄最後一份文件\r\n          lastVisible.current = snapshot.docs[snapshot.docs.length - 1];\r\n          setRows(data);\r\n        });\r\n    }else{\r\n      setRows([])\r\n    } \r\n  }, [currAcc]);\r\n\r\n  // 新增\r\n  function createRow() {\r\n    const row = {\r\n      account_name: currAcc,\r\n      note: note,\r\n      expense: amt,\r\n      spend_date: '2022-07-22',\r\n      createdAt: firebase.firestore.Timestamp.now()\r\n    };\r\n    setIsLoading(true);\r\n    firebase\r\n      .firestore()\r\n      .collection('expenses')\r\n      .add(row)\r\n      .then(() => {\r\n        setDefault();\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  function updateRow() {\r\n    const db = firebase.firestore();\r\n    var docRef = db.collection('expenses').doc(docID);\r\n    const row = {\r\n      account_name: currAcc,\r\n      note: note,\r\n      expense: amt,\r\n      spend_date: '2022-07-22',\r\n    };\r\n    setIsLoading(true);\r\n    docRef.update(row).then(() => {\r\n      setDefault()\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  function setDefault() {\r\n    setDocID('');\r\n    setNote('');\r\n    setOpen(false);\r\n    setAmt('');\r\n  }\r\n  function deleteRow() {\r\n    const db = firebase.firestore();\r\n    const docRef = db.collection('expenses').doc(docID);\r\n    setIsLoading(true);\r\n    docRef.delete().then(() => {\r\n      setDefault();\r\n      setIsLoading(false);\r\n    });\r\n  }\r\n\r\n  function saveRow() {\r\n    if (docID) {\r\n      updateRow();\r\n    } else {\r\n      createRow();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    { \r\n    \r\n    currAcc &&\r\n    <Button\r\n        onClick={() => {\r\n          setOpen(true);          \r\n        }}\r\n      >\r\n        新增\r\n      </Button>\r\n}\r\n      {/* <Button onClick={deleteRow} color='red'>刪除</Button> */}\r\n      <Modal open={open} closeIcon onClose={setDefault}>\r\n        <Modal.Header>編輯支出</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Field>\r\n              <label>項目</label>\r\n              <input\r\n                placeholder=\"項目\"\r\n                value={note}\r\n                onChange={(e) => {\r\n                  setNote(e.target.value);\r\n                }}\r\n              />\r\n              </Form.Field>\r\n              <Form.Field>\r\n              <label>金額</label>\r\n              <input\r\n              type=\"number\"\r\n                placeholder=\"金額\"\r\n                value={amt}\r\n                onChange={(e) => {\r\n                  setAmt(e.target.value);\r\n                }}\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n        {docID ? (\r\n            <Button color=\"red\" floated=\"left\" loading={isLoading} onClick={deleteRow}>\r\n              刪除\r\n            </Button>\r\n          ) : (\r\n            ''\r\n          )}\r\n          <Button onClick={saveRow} loading={isLoading}>儲存</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell width={3}>日期</Table.HeaderCell>\r\n            <Table.HeaderCell width={5}>項目</Table.HeaderCell>\r\n            <Table.HeaderCell>金額</Table.HeaderCell>\r\n           \r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {rows.map((row, i) => {\r\n            return (\r\n              <Table.Row\r\n                key={i}\r\n                onClick={() => {\r\n                  setDocID(row.id);\r\n                  setNote(row.note);\r\n                  setAmt(row.expense);\r\n                  setOpen(true);\r\n                }}\r\n              >\r\n                <Table.Cell>{row.spend_date}</Table.Cell>\r\n                <Table.Cell>{row.note}</Table.Cell>\r\n                <Table.Cell>{row.expense}</Table.Cell>\r\n                {/* <Table.Cell>{row.account_name}</Table.Cell> */}\r\n               \r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n      <Waypoint\r\n        onEnter={() => {\r\n          if (lastVisible.current) {\r\n            if (currAcc) {\r\n              firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n                .where('account_name', '==', currAcc)\r\n                .orderBy('spend_date', 'desc')\r\n                .startAfter(lastVisible.current)\r\n                .limit(20)\r\n                .onSnapshot((snapshot) => {\r\n                  const data = snapshot.docs.map((doc) => {\r\n                    return { ...doc.data(), id: doc.id };\r\n                  });\r\n                  // 紀錄最後一份文件\r\n                  lastVisible.current = snapshot.docs[snapshot.docs.length - 1];\r\n                  setRows([...rows, ...data]);\r\n                });\r\n            } else {\r\n              firebase\r\n                .firestore()\r\n                .collection('expenses')\r\n\r\n                .orderBy('spend_date', 'desc')\r\n                .startAfter(lastVisible.current)\r\n                .limit(20)\r\n                .onSnapshot((snapshot) => {\r\n                  const data = snapshot.docs.map((doc) => {\r\n                    return { ...doc.data(), id: doc.id };\r\n                  });\r\n                  // 紀錄最後一份文件\r\n                  lastVisible.current = snapshot.docs[snapshot.docs.length - 1];\r\n                  setRows([...rows, ...data]);\r\n                });\r\n            }\r\n          }\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Button,\r\n  Grid,\r\n  List,\r\n  Icon,\r\n  Image,\r\n  Modal,\r\n  Header,\r\n  Form\r\n} from 'semantic-ui-react';\r\nimport firebase from '../utils/firebase';\r\nimport Expenses from './Expenses';\r\nfunction AccExpenses() {\r\n  const location = useLocation();\r\n  const url = new URLSearchParams(location.search);\r\n  const currAcc = url.get('acc');\r\n  const user = firebase.auth().currentUser;\r\n  // 存放點選帳戶的值,再用此值和帳戶的值做比對,呈現三角圖示\r\n  const [accName, setAccName] = React.useState('');\r\n  const [rows, setRows] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  // const [user, setUser] = React.useState(null);\r\n  React.useEffect(() => {\r\n    // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n    // firebase.auth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      firebase\r\n        .firestore()\r\n        .collection('accounts')\r\n        .where('user_id', '==', user.uid)\r\n        .onSnapshot((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return {...doc.data(),id:doc.id};\r\n          });\r\n          setRows(data);\r\n        });\r\n    }\r\n    // });\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <Container>\r\n      <Grid columns={3} divided>\r\n        <Grid.Row>\r\n          <Grid.Column width={4}>\r\n            <List selection size=\"large\">\r\n              {rows.map((row, i) => {\r\n                return (\r\n                  <List.Item\r\n                 \r\n                    active={currAcc == row.name}\r\n                    key={i}\r\n                    as={Link}\r\n                    to={`/acc-expenses?acc=${row.id}`}\r\n                  >\r\n                    {currAcc == row.id ? <Icon name=\"right triangle\" /> : ''}\r\n                    <List.Content>\r\n                    {/* <Icon name=\"right triangle\" /> */}\r\n                     {row.name}\r\n                     \r\n                    </List.Content>\r\n                  </List.Item>\r\n                );\r\n              })}\r\n            </List>\r\n            \r\n           \r\n          </Grid.Column>\r\n          <Grid.Column width={12}>\r\n            <Expenses />\r\n          </Grid.Column>\r\n        \r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      {/* <Dropdown text=\"帳戶\">\r\n        <Dropdown.Menu>\r\n          {rows.map((row, i) => {\r\n            return <Dropdown.Item key={i} text={row.name} />;\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown> */}\r\n    </Container>\r\n  );\r\n}\r\nexport default AccExpenses;\r\n","import { useEffect, useState } from \"react\"\r\nimport {auth} from '../utils/firebase' \r\nimport {Button } from 'react-bootstrap'\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nimport { useAuth } from \"../contexts/AuthContext\"\r\n\r\n\r\nexport default function Dashboard() {\r\n  const history = useHistory()\r\n  // const [currentUser, setCurrentUser] = useState()\r\n  const { currentUser, logout } = useAuth()\r\n\r\n\r\n  // Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\r\n  \r\n  \r\n  // useEffect(()=>{\r\n  //   auth.onAuthStateChanged(user=>{\r\n      \r\n  //     setCurrentUser(user)\r\n  //   })\r\n  //   console.log('d')\r\n\r\n  // },[])\r\n\r\n  async function handleLogout() {\r\n    // setError(\"\")\r\n\r\n    try {\r\n      await auth.signOut()\r\n      history.push(\"/login-form\")\r\n    } catch {\r\n      // setError(\"Failed to log out\")\r\n    }\r\n  }\r\n\r\n\r\n  return <div>{currentUser && currentUser.email}\r\n  \r\n  <Button variant=\"link\" onClick={handleLogout}>\r\n          Log Out\r\n        </Button>\r\n  </div>\r\n}","import { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  Container,\r\n  List,\r\n  Icon,\r\n  Button,\r\n  Grid,\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Form,\r\n  Modal,\r\n  Table,\r\n} from 'semantic-ui-react';\r\nimport { Link, useLocation, useHistory } from 'react-router-dom';\r\nimport firebase, { auth } from '../utils/firebase';\r\nfunction Balances() {\r\n  const db = firebase.firestore();\r\n  const dateRef = useRef();\r\n  const titleRef = useRef();\r\n  const amtRef = useRef();\r\n  const [amt, setAmt] = useState('');\r\n  const [row, setRow] = useState({});\r\n  const [rows, setRows] = useState([]);\r\n  const [docID, setDocID] = useState('');\r\n  const [rows2, setRows2] = useState([]);\r\n  const [total, setTotal] = useState({});\r\n  // const [currAcc, setCurrAcc] = useState();\r\n  const [open, setOpen] = useState(false);\r\n  const user = auth.currentUser || null;\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const url = new URLSearchParams(location.search);\r\n  const currAcc = url.get('account_id') || null;\r\n  useEffect(() => {\r\n    if (user) {\r\n      db.collection('accounts')\r\n        .where('user_id', '==', user.uid)\r\n        .limit(3)\r\n        .get()\r\n        .then((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n          setRows(data);\r\n          console.log(data);\r\n        });\r\n    }\r\n\r\n    db.collection('balances')\r\n      .where('account_id', '==', currAcc)\r\n      // .orderBy('createdAt', 'desc')\r\n      .onSnapshot((snapshot) => {\r\n        const data = snapshot.docs.map((doc) => {\r\n          return { ...doc.data(), id: doc.id };\r\n        });\r\n        setRows2(data);\r\n      });\r\n  }, [currAcc]);\r\n  function saveRow() {\r\n    if (docID) {\r\n      const row = {\r\n        date: dateRef.current.value,\r\n        title: titleRef.current.value,\r\n        income: amtRef.current.value,\r\n      };\r\n      db.collection('balances')\r\n        .doc(docID)\r\n        .update(row)\r\n        .then((doc) => {\r\n          // setRows2(...rows2,row);\r\n          // rows2.unshift({ ...row, id: doc.id });\r\n          // console.log(rows2);\r\n          setOpen(false);\r\n          setDocID('');\r\n        });\r\n    } else {\r\n      const row = {\r\n        date: dateRef.current.value,\r\n        title: titleRef.current.value,\r\n        // expense:amtRef.current.value\r\n        income: amtRef.current.value,\r\n        account_id: currAcc,\r\n        createdAt: firebase.firestore.Timestamp.now(),\r\n      };\r\n      db.collection('balances')\r\n        .add(row)\r\n        .then((doc) => {\r\n          // setRows2(...rows2,row);\r\n          // rows2.unshift({ ...row, id: doc.id });\r\n          console.log(rows2);\r\n          setOpen(false);\r\n        });\r\n    }\r\n  }\r\n  // 這個函數給帳戶的 onClick,要按二次才能更新資料\r\n  // setCurrAcc(row.id);  無法馬上取得 currAcc\r\n  function filterRow() {\r\n    if (currAcc)\r\n      db.collection('balances')\r\n        .where('account_id', '==', currAcc)\r\n        .get()\r\n        .then((snapshot) => {\r\n          const data = snapshot.docs.map((doc) => {\r\n            return { ...doc.data(), id: doc.id };\r\n          });\r\n          setRows2(data);\r\n          // console.log(data);\r\n        });\r\n  }\r\n  return (\r\n    <Container>\r\n      \r\n      <Grid columns=\"equal\">\r\n        {/* 帳戶 */}\r\n        <Grid.Row>\r\n          {rows.map((row, i) => {\r\n            return (\r\n              <Grid.Column key={i}>\r\n                <Segment \r\n                  color=\"teal\"\r\n                  onClick={() => {\r\n                    history.push(`/balances?account_id=${row.id}`);\r\n                    // setCurrAcc(row.id);\r\n                    // 無法馬上取得 currAcc,要按第二下\r\n                    // console.log(currAcc);\r\n                    // 將參數直接改成 row.id\r\n                    // db.collection('balances')\r\n                    //   .where('account_id', '==', row.id)\r\n                    //   .get()\r\n                    //   .then((snapshot) => {\r\n                    //     const data = snapshot.docs.map((doc) => {\r\n                    //       return { ...doc.data(), id: doc.id };\r\n                    //     });\r\n                    //     setRows2(data);\r\n                    //     // console.log(data);\r\n                    //   });\r\n                  }}\r\n                  inverted={currAcc == row.id}\r\n                  textAlign=\"center\"\r\n                >\r\n                  {row.name}\r\n                </Segment>\r\n              </Grid.Column>\r\n            );\r\n          })}\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment textAlign=\"right\">\r\n              <Header>{total.income}</Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <Segment textAlign=\"right\">\r\n              <Header>{total.expense}</Header>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment\r\n              color=\"blue\"\r\n              onClick={() => {\r\n                setOpen(true);\r\n              }}\r\n              inverted\r\n              textAlign=\"center\"\r\n            >\r\n              新增\r\n              {/* <Button fluid primary>新增</Button> */}\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      <Modal\r\n        closeIcon\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n      >\r\n        <Header icon=\"archive\" content=\"Archive Old Messages\" />\r\n        <Modal.Content>\r\n          {/* 表單 */}\r\n          <Form size=\"large\">\r\n            <Form.Field>\r\n              <label>日期</label>\r\n              <input\r\n                ref={dateRef}\r\n                value={row.date}\r\n                onChange={(e) => setRow({ date: e.target.value })}\r\n                type=\"date\"\r\n              />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>項目</label>\r\n              <input ref={titleRef} />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label>金額</label>\r\n              <input\r\n                ref={amtRef}\r\n                value={amt}\r\n                onChange={(e) => setAmt(e.target.value)}\r\n                type=\"number\"\r\n              />\r\n            </Form.Field>\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button color=\"red\" onClick={() => setOpen(false)}>\r\n            <Icon name=\"remove\" /> No\r\n          </Button>\r\n          <Button color=\"green\" onClick={saveRow}>\r\n            <Icon name=\"checkmark\" />\r\n          </Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      {/* 表格 */}\r\n\r\n      <Table unstackable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>日期</Table.HeaderCell>\r\n            <Table.HeaderCell>收入</Table.HeaderCell>\r\n            <Table.HeaderCell>支出</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          {rows2.map((row) => {\r\n            return (\r\n              <Table.Row\r\n                onClick={() => {\r\n                  setOpen(true);\r\n                  setRow(row);\r\n                  setAmt(row.income);\r\n                  setDocID(row.id);\r\n                }}\r\n                key={row.id}\r\n              >\r\n                <Table.Cell>{row.date}</Table.Cell>\r\n                <Table.Cell>{row.income}</Table.Cell>\r\n                <Table.Cell>{row.expense}</Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n\r\n      {/* <List horizontal divided>\r\n        {rows.map((row, i) => {\r\n          return (\r\n            <List.Item key={i} as={Link} to={`/balances?account_id=${row.id}`}>\r\n              <List.Content>\r\n               \r\n                <Button>{row.name}</Button>\r\n              </List.Content>\r\n            </List.Item>\r\n          );\r\n        })}\r\n      </List> */}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Balances;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  Switch,\r\n  useHistory,\r\n  Redirect\r\n} from 'react-router-dom';\r\nimport Incomes from './components/Incomes';\r\nimport Stocks from './components/Stocks';\r\nimport Accounts from './components/Accounts';\r\n\r\nimport MySettings from './components/MySettings';\r\nimport { Menu, List, Container, Dropdown } from 'semantic-ui-react';\r\n\r\nimport firebase from './utils/firebase';\r\nimport 'firebase/auth';\r\nimport LoginForm from './components/LoginForm';\r\nimport AccExpenses from './components/AccExpenses';\r\nimport Signup from './components/Signup';\r\nimport Dashboard from './components/Dashboard';\r\nimport Balances from './components/Balances';\r\n\r\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\r\n\r\nfunction Header() {\r\n  // const {  currentUser } = useAuth()\r\n\r\n  const [user, setUser] = React.useState(null);\r\n  const [email, setEmail] = React.useState('');\r\n  React.useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((currUser) => {\r\n      setUser(currUser);\r\n      if (currUser) {\r\n        setEmail(currUser.email);\r\n      }\r\n      // currUser.updateProfile({displayName:'馬克'})\r\n    });\r\n  }, []);\r\n  const history = useHistory();\r\n  async function handleLogoutH() {\r\n    try {\r\n      await firebase.auth().signOut();\r\n      // 在這做轉址動作會沒作用\r\n      // history.push('/login-form');\r\n      // 改為在下拉選單直接 as={Link} to=\"login-form\"\r\n    } catch {\r\n      // setError(\"Failed to log out\")\r\n    }\r\n\r\n    // firebase.auth().signOut().then(()=>{\r\n    // Uncaught TypeError: Cannot read properties of undefined (reading 'push')\r\n    // history.push('/login-form');\r\n    // });\r\n  }\r\n  const [activeItem, setActiveItem] = useState('');\r\n  return (\r\n    <Router>\r\n      <Menu>\r\n       \r\n       \r\n        {user && email == 'mkdodos@gmail.com' ? (\r\n           <Menu.Item\r\n           as={Link}\r\n           to=\"/incomes\"\r\n           active={activeItem == 'editor'}\r\n           onClick={() => setActiveItem('editor')}\r\n         >\r\n           外送收入 \r\n         </Menu.Item>\r\n        ) : (\r\n          ''\r\n        )}\r\n       \r\n       \r\n       \r\n        {user && email == 'mkdodos@gmail.com' ? (\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/stocks\"\r\n            active={activeItem == 'review'}\r\n            onClick={() => setActiveItem('review')}\r\n          >\r\n            股票\r\n          </Menu.Item>\r\n        ) : (\r\n          ''\r\n        )}\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/accounts\"\r\n          active={activeItem == 'accounts'}\r\n          onClick={() => setActiveItem('accounts')}\r\n        >\r\n          帳戶\r\n        </Menu.Item>\r\n\r\n        {/* <Menu.Item\r\n          as={Link}\r\n          to=\"/acc-expenses\"\r\n          active={activeItem == 'acc-expenses'}\r\n          onClick={() => setActiveItem('acc-expenses')}\r\n        >\r\n          收支\r\n        </Menu.Item> */}\r\n\r\n\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/balances\"          \r\n        >\r\n          收支\r\n        </Menu.Item>\r\n\r\n\r\n        <Menu.Menu position=\"right\">\r\n          {user ? (\r\n            <Dropdown item text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item text=\"基本資料\" as={Link} to=\"my-settings\" />\r\n                <Dropdown.Item\r\n                  text=\"登出\"\r\n                  as={Link}\r\n                  to=\"login-form\"\r\n                  onClick={handleLogoutH}\r\n                />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ) : (\r\n            // </Menu.Item>\r\n            <Menu.Item\r\n              as={Link}\r\n              to=\"/login-form\"\r\n              active={activeItem == 'login-form'}\r\n              onClick={() => setActiveItem('login-form')}\r\n            >\r\n              登入表單\r\n            </Menu.Item>\r\n          )}\r\n        </Menu.Menu>\r\n      </Menu>\r\n\r\n      <AuthProvider>\r\n        <Switch>\r\n          <Route path=\"/incomes\">\r\n            <Incomes />\r\n          </Route>\r\n          <Route path=\"/stocks\">\r\n            {/* 要有登入才能查看此頁,沒有登入時導向登入頁 */}\r\n            {user ? <Stocks /> : <Redirect to=\"login-form\"/> }\r\n          </Route>\r\n          <Route path=\"/accounts\">\r\n            <Accounts />\r\n          </Route>\r\n          <Route path=\"/acc-expenses\">\r\n            <AccExpenses />\r\n          </Route>\r\n          <Route path=\"/login-form\">\r\n            <LoginForm />\r\n          </Route>\r\n          <Route path=\"/my-settings\">\r\n            <MySettings user={user} />\r\n          </Route>\r\n          <Route path=\"/signup\" component={Signup} />\r\n          <Route path=\"/balances\" component={Balances} />\r\n          <Route path=\"/\" exact component={Dashboard} />\r\n          \r\n        </Switch>\r\n      </AuthProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Signup from './components/Signup';\r\nimport Header from './Header';\r\n// import { Container, Row, Col } from 'react-bootstrap';\r\nfunction App() {\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n\r\n\r\n      {/* <Container\r\n        className=\"d-flex align-items-center justfy-content-center\"\r\n        style={{ minHeight: '100vh' }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: '400px' }}>         \r\n          <Signup />\r\n        </div>\r\n      </Container> */}\r\n      <Header />\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import App from './App';\r\nimport ReactDom from 'react-dom'\r\nimport 'semantic-ui-css/semantic.min.css'\r\n// import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nimport 'firebase/firestore';\r\n\r\nconst container = document.getElementById('root');\r\nReactDom.render(<App/>,container)"],"sourceRoot":""}